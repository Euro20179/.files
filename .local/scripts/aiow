#!/bin/bash

display_fmt="[\(.Type)] \(.Name)"

while getopts "W:d:o:s:h" OPT; do
    case "$OPT" in
        W) mode=thumbnail; item=$OPTARG ;;
        d) display_fmt="$OPTARG" ;;
        o) on_select=$OPTARG ;;
        s) season_idx=$OPTARG ;;
        h) cat <<EOF && exit 0;;
aiow [opts] [search [queryParams]]
    Parameters
        search: search query
        queryParams: params to pass to jellyfin
    Options:
        -d: display format, defualt: [\(.Type)] \(.Name) "\t" MUST NOT appear
        -o: what happens when the main entry is selected, default: ""
            the other option is "s" which opens the season selection
        -s: season index, the season to automatically select if season menu is opened
EOF
        *) : ;;
    esac
done

display_fmt="$display_fmt\t\(if .RunTimeTicks then .RunTimeTicks/10000000/60 else 0 end)\t\(.Id)"

shift $((OPTIND - 1))

search="$1"
: "${queryParams="${2:-IncludeItemTypes=Series,Movie}"}"
queryParams="Recursive=True&fields=Path&${queryParams}"

[ "$search" ] && queryParams="searchTerm=${search}&${queryParams}"

jellyfinapi="https://cloud:9999/jellyfin"
jellyfinkey=$(cat "$XDG_DOCUMENTS_HOME"/APIKeys/jellyfin-apikey)
userid=$(cat "$XDG_DOCUMENTS_HOME"/APIKeys/jellyfin-userid)

sixel_cache="${XDG_CACHE_HOME}/aiow"

mkdir -p "$sixel_cache"

cache="$(mktemp -d)"

episodes () {
    id="$1"
    sid="$2"

    [ -f "$cache/eps.$id" ] && epItems=$(cat "$cache/eps.$id") ||
        epItems=$(curl "$jellyfinapi/Shows/$id/Episodes?seasonId=$id&userId=&fields=Path" \
            -H "Authorization: MediaBrowser Token=\"$jellyfinkey\"" -k | tee "$cache/seasons.$id")

    [[ "$seasonItems" =~ \"Not\ Found\" ]] && return 1

    jellyfinItems=$epItems

    id=$(echo "$epItems" | jq -r '.Items|.[]|"\(.Name)\t\(.Id)"' | column -t -s $'\t'|
            fzf --preview "$0 -W {}" --expect "ctrl-h" | awk '{printf $NF}')

    case "$id" in
        ctrl-h*) seasons "$sid" ;;
        *) id="${id#$'\n'}"
    esac
}

seasons () {
    id="$1"
    sid="$1"

    [ -f "$cache/seasons.$id" ] && seasonItems=$(cat "$cache/seasons.$id") ||
        seasonItems=$(curl "$jellyfinapi/Shows/$id/Seasons?userId=$userid&fields=Path" \
            -H "Authorization: MediaBrowser Token=\"$jellyfinkey\"" -k | tee "$cache/seasons.$id")

    [[ "$seasonItems" =~ \"Not\ Found\" ]] && return 1

    jellyfinItems=$seasonItems

    if [ "$season_idx" ]; then
        id="$(echo "$seasonItems" | jq -r ".Items.[]|select(.IndexNumber==$season_idx).Id")"
        return 0
    fi

    id=$(echo "$seasonItems" | jq -r '.Items|.[]|"\(.Name)\t\(.Id)"' | column -t -s $'\t'|
            fzf --preview "$0 -W {}" --expect "ctrl-l,ctrl-h" | awk '{printf $NF}')

    case "$id" in
        ctrl-h*) main_display 1 ;;
        ctrl-l*)
            id="${id#*ctrl-l}"
            episodes "$id" "$sid" ;;
        *) id="${id#$'\n'}"
    esac

}

main_display() {
    #whether or not this is called from a submenu
    local back=${1:-0}

    [ -f "$cache/all" ] && jellyfinItems=$(cat "$cache/all") ||
        jellyfinItems=$(curl "$jellyfinapi/Users/$userid/Items?${queryParams}" \
            -H "Authorization: MediaBrowser Token=\"$jellyfinkey\"" -k | tee "$cache/all")

    names=$(echo "$jellyfinItems" | jq -r '.Items|.[]|"'"${display_fmt}"'"' | column -t -s $'\t' -o $'\t')

    id=$(echo "$names" | fzf -1 --preview "$0 -W {}" --expect "ctrl-l" | awk '{print $NF}')

    case "$id" in
        ctrl-l*)
            id="${id#*ctrl-l*$'\n'}"
            seasons "$id" ;;
        *) id="${id#$'\n'}"
    esac

    [ $back = 1 ] && return 0

    case "$on_select" in
        s) seasons "$id" ;;
    esac

    location=$(printf "%s" "$jellyfinItems" | jq -r ".Items|.[]|select(.Id==\"$id\")|.Path")

    linkhandler media://"${location}"
}

thumbnail() {
    IFS=$'\t' read -r name minutes id <<< "$item"
    [ -f "$sixel_cache/$id.sixel" ] &&
        cat "$sixel_cache/$id.sixel" ||
        curl "$jellyfinapi/Items/$id/Images/Primary?width=400" -k 2> /dev/null | img2sixel - | tee "$sixel_cache/$id.sixel"
    printf "\x1b[37m%s\x1b[0m\n" "$id"
    printf "\x1b[32m%s\x1b[0m\n" "$name"
    printf "\x1b[33m%s\x1b[0m minutes\n" "$minutes"
}

if [ -z "$mode" ]; then
    main_display
elif [ "$mode" = "thumbnail" ]; then
    thumbnail
fi

rm -r "$cache"
