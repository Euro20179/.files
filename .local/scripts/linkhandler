#!/bin/sh

#LH_NO_EDIT is used in my nvim config to say, dont edit just exit with an error to let nvim handle the editing

link="$*"

#rev cut rev gets the last field
mime=$(file --mime-type "$*" | rev | cut -d: -f1 | rev | tr -d ' ')

EDITOR="$TERMINAL $EDITOR"

#website="$(printf "%s" "$link" | grep -Po "://.*?/" | sed -E 's/(:\/)?\///g')"

case "$mime" in
    image/*) sxiv "$link"; exit 0 ;;
    text/*|plain/*)
        [ $LH_NO_EDIT = 1 ] && exit 1
         $EDITOR "$link"; exit 0 ;;
    video/*|audio/*) mpv "$link"; exit 0 ;;
    application/x-shockwave-flash) flashplayer "$link"; exit 0 ;;
esac
case "$link" in
    *.swf) flashplayer "$link" ;;
    *.png|*.jpg|*.jpeg|*.webm|*.gif|*.webm|*.webp) mpv --loop "$link" & ;;
    #mpv works if there is a password in the url
    sftp://*:*@*.m3u8) mpv "$link" & ;;
    #otherwise use vlc
    sftp://*.m3u8) vlc "$link" & ;;
    #all other m3u8's go to mpv
    *.m3u8) mpv "$link" & ;;
    file://*|/*|~/*|./*)
        [ $LH_NO_EDIT = 1 ] && exit 1
         $EDITOR "$link" ;;
    term://*) "${TERMINAL}" "${TERMINAL_HOLD_OPT:="-H"}" -e "${link#term://}";;
    man://*|man:)
        grep -q '.*nvim.*' <<EOF || [ "$NVIM" ] && { link="${link#man:}"; link="${link#//}"; }
$MANPAGER
EOF
        #If nvim is open and man:// was opened from nvim, open in a new tab in the current instance of nvim
        [ "$NVIM" ] && nvim --headless --server "$NVIM" --remote-send ":tab Man $link<CR>" || "${TERMINAL}" $MANPAGER "$link" ;;
    https://cdn.discordapp.com/attachments/*)
        tmp=$(mktemp)
        curl "$link" > "$tmp"
        linkhandler "$tmp"
        rm "$tmp" ;;
    https://github.com/*/blob/*)
        [ $LH_NO_EDIT = 1 ] && exit 1
        file_path=${link#*/blob/}
        repo="${link%%/blob/*}"
        repo="${repo#https://github.com/}"
        $EDITOR "https://raw.githubusercontent.com/${repo}/${file_path}" ;;
    sftp://*) nemo "$link" ;;
    *)
        if yt-dlp -s "$link" > /dev/null 2>&1; then
            nohup mpv --geometry=1000 --loop "$link" > /dev/null 2>&1 &
        else
            nohup $BROWSER "$link" > /dev/null 2>&1 &
        fi;;
esac
