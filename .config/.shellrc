#!/bin/sh

########
# Foot #
########
# {{{
#foot terminfo is broken for some reason
    #by broken i mean it doesn't exist
# [ $TERM = "foot" ] && export TERM=xterm-256color
# }}}

###########
# THEMING #
###########
# {{{
export XCURSOR_SIZE=24
export XCURSOR_THEME="ArcStarry-cursors"
# export GTK_THEME='catppuccin-macchiato-blue-standard+default'
export QT_QPA_PLATFORMTHEME=qt6ct
export QT_QPA_PLATFORM=wayland
# }}}

#######
# IME #
#######
# {{{
export GTK_IM_MODULE=fcitx
export QT_IM_MODULE=fcitx
export SDL_IM_MODULE=fcitx
export XMODIFIERS='@im=fcitx'
# # }}}

#######
# XDG #
#######
# {{{
export XDG_HISTORY_HOME=${XDG_HISTORY_HOME:=$HOME/.history}
export XDG_DATA_HOME=${XDG_DATA_HOME:="$HOME/.local/share"}
export XDG_GAMES_HOME=${XDG_GAMES_HOME:="$HOME/Games"}
export XDG_CACHE_HOME=${XDG_CACHE_HOME:="$HOME/.cache"}
export XDG_CONFIG_HOME=${XDG_CONFIG_HOME:="$HOME/.config"}
export XDG_DOWNLOAD_HOME=${XDG_DOWNLOAD_HOME:="$HOME/Downloads"}
export XDG_DOCUMENTS_HOME=${XDG_DOCUMENTS_HOME:="$HOME/Documents"}
export XDG_PICTURES_HOME=${XDG_PICTURES_HOME:="$HOME/Pictures"}
export XDG_VIDEOS_HOME=${XDG_VIDEOS_HOME:="$HOME/Videos"}
export XDG_STATE_HOME=${XDG_STATE_HOME:="$HOME/.local/state"}
export XDG_MUSIC_HOME=${XDG_MUSIC_HOME:="$HOME/Songs"}
export XDG_WALLPAPERS_DIR="$XDG_PICTURES_HOME/wallpapers"
# }}}

#################
# WAYLAND FIXES #
#################
# {{{
#some java apps don't work without this
export _JAVA_AWT_WM_NONREPARENTING=1
export GTK_USE_PORTAL=1
export GDK_BACKEND=wayland
export MOZ_ENABLE_WAYLAND=1
export SDL_VIDEODRIVER=wayland,x11
#fixes weird xdg-open bugs for some fucking reason
[ -z "$XDG_CURRENT_DESKTOP" ] && export XDG_CURRENT_DESKTOP=Hyprland
# }}}

#################
# PROGRAM PATHS #
#################
# {{{
export ZEF_INSTALL_TO="${XDG_DATA_HOME}/zef"
export ZEF_CONFIG_PATH="${XDG_CONFIG_HOME}/zef"

export LYNX_CFG="${XDG_CONFIG_HOME}/lynx/lynx.cfg"

CONF_FILE="$HOME/.config/mpd.conf"

export GTK2_RC_FILES="$XDG_CONFIG_HOME/gtk-2.0/gtkrc"
export DIALOGRC=~/.config
export XINITRC=~/.config
export LESSHISTFILE="/dev/null"
export NODE_REPL_HISTORY="/dev/null"
export CARGO_HOME="$XDG_DATA_HOME/cargo"
export GNUPGHOME="$XDG_DATA_HOME/gnupg"
export GRADLE_USER_HOME="$XDG_DATA_HOME/gradle"
export DVDCSS_CACHE="$XDG_CACHE_HOME/dvdcss"
export NUGET_PACKAGES="$XDG_CACHE_HOME"/NuGetPackages
export PYTHONSTARTUP="${XDG_CONFIG_HOME}/python/pythonrc"
export _JAVA_OPTIONS=-Djava.util.prefs.userRoot="$XDG_CONFIG_HOME/java"
export PASSWORD_STORE_DIR="${XDG_DATA_HOME:-$HOME/.local/share}/password-store"

export CABAL_DIR="$XDG_DATA_HOME/cabal"
export CABAL_CONFIG="$XDG_CONFIG_HOME/cabal/config"

export DOTNET_CLI_HOME="${XDG_DATA_HOME}/dotnet"

export GOPATH="$XDG_DATA_HOME/go:$HOME/Programs/Coding Projects/go"
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"

export XCURSOR_PATH="/usr/share/icons:/usr/local/share/icons:$XDG_DATA_HOME/icons"

export WINEPREFIX="$XDG_DATA_HOME/wine"

export SONGS_ROOT=$HOME/Songs/scripts
# }}}

################
# SYSTEM PATHS #
################
# {{{
export SYSTEM_IMAGES="$XDG_PICTURES_HOME/system-images"
export NEOFETCH_IMAGE=$(fd . "$SYSTEM_IMAGES/neofetch" | shuf | head -n1)
export SHELL_LIB="$HOME/.local/lib/shell"
export CLOUD="/home/cloud"
export WIKI="$CLOUD/Documents/vimwiki"
export CALFILE="$CLOUD/CAL.md"
export AIO_SERVER="https://aio.seceurity.place"

export DIARY_FILE="$XDG_DOCUMENTS_HOME/.diary.zip"

export PATH="/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/opt:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:$HOME/Programs/Coding Projects/bash:"
export PATH="$PATH:$GOPATH/bin:$CARGO_HOME/bin:/usr/share/code:$HOME/Programs/Coding Projects/bash:$HOME/.local/bin:$HOME/.local/scripts:/opt"
export PATH="${PATH}:$HOME/.local/share/nvim/mason/bin:$XDG_CONFIG_HOME/emacs/bin"
export PATH="${PATH}:/opt/servo"
export SH_SCRIPTS="$HOME/Programs/Coding Projects/bash"
# }}}

####################
# DEFAULT PROGRAMS #
####################
# {{{
. "$XDG_CONFIG_HOME/defaults.sh"
# }}}

###################
# PROGRAM ALIASES #
###################
# {{{
#
alias t=tmux' attach'
alias u="paru; autoremove"
alias conf=open-config-from-vw.lua
alias "dr=ripdrag"
alias awatch='ytfzf -ccloud --url-handler-opts=--profile=anime'
alias autoremove='pacman -Qdttq | sudo pacman -Rs - || echo Nothing to remove'
#It's really annoying that wget leaves the .wget_hists file or whatever
alias "wget=wget --no-hsts"
alias 's=bookmarkfs search'
alias "bc=bc -l"
alias "less=less -r"

alias 'plotdu=BROWSER=$BROWSER_LITE $HOME/Programs/Coding\ Projects/Python_things/plotdu/plotdu'
alias 'plotpkgs=BROWSER=$BROWSER_LITE $HOME/Programs/Coding\ Projects/Python_things/plotpkgs/plotpkgs'

alias Q='nvim +Qalc +startinsert +set" filetype=amml"'

alias llm="su -c 'HOME=$HOME HSA_OVERRIDE_GFX_VERSION=10.3.0 OLLAMA_HOST='0.0.0.0' OLLAMA_ORIGINS='*' ollama serve'"
alias ollama="OLLAMA_HOST=0.0.0.0 ollama"

config () {
    [ -n "$*" ] && {
        git --git-dir=$HOME/Programs/GithubContribs/dotfiles/ --work-tree=$HOME "$@"
    } || lazygit -g ~/Programs/GithubContribs/dotfiles -w $HOME
}

alias o=linkhandler

alias 'lines=tokei | awk "/Total/{print \$3}" | tail -n1'

alias te=trash-empty

alias today='events | grep "$(date +"%B/%d/%Y")" | awk -F "ON" "{print \$1}"'
alias tomorrow='events | grep "$(date -d tomorrow +"%B/%d/%Y")" | awk -F "ON" "{print \$1}"'

me () {
    disown 2> /dev/null 1>&2
    if [ "$?" -ne 127 ]; then
        mullvad-exclude "$@" & disown
    else
        printf "\033[31mBAD SHELL\n\033[0m"
    fi
}
# }}}

############################
# PROGRAM OVERRIDE ALIASES #
############################
# {{{
alias nvim=$EDITOR
alias n="$EDITOR +Oil"
alias sxiv=nsxiv
alias "vim=nvim"
alias 'ls=lsd'
alias "l=lsd --hyperlink auto --group-directories-first -A"
alias "ll=command ls -ASs --group-directories-first --color=auto"
alias rm="trash"
#`alias cd=z` is done in the zoxide autoload file because it must be done after zoxide does its stuff
# }}}

############################
# FILE/DIRECTORY SHORTCUTS #
############################
# {{{
#alias anime='nvim +"cd $HOME/Documents/vimwiki/norg-home" $HOME/Documents/vimwiki/norg-home/anime-list.norg'
alias vw='nvim +"cd $HOME/Documents/vimwiki" $HOME/Documents/vimwiki/index.mmfml'

p() {
    file=$(zoxide query -i)
    # file=$(zoxide query -l "Coding Projects/" "/" | fzf)
    cd "$file"
    nvim +"if exists(':Oil') | Oil . | else Explore . | endif" "$file"
}

alias TODO='linkhandler vw:TODO.mmfml'

CAL () {
    m=$(date +%B)
    $EDITOR -S "$HOME/.local/vim-scripts/open-cal"
}

alias "ds=cd ~/Downloads"
alias "dF=cd ~/Documents"
alias "dm=cd ~/Pictures/memes"
alias "db=cd ~/Documents/bookmarks"

gc () {
    sub_dir="$1"
    case "$sub_dir" in
        y) sub_dir="../GithubContribs/ytfzf" ;;
        B) sub_dir="JS Things/bircle" ;;
        b) sub_dir="JS Things/bircle-website" ;;
        d) sub_dir="C/dvd_screen" ;;
        T) sub_dir="rust/tpick" ;;
    esac
    cd "$HOME/Programs/Coding Projects/$sub_dir"
}
# }}}

#####################
# MISC PROGRAM VARS #
#####################
# {{{
export GPG_TTY=$(tty)

export TZ=:/etc/localtime

export FZF_DEFAULT_OPTS="--bind=ctrl-a:select-all,ctrl-u:deselect-all,ctrl-j:down,ctrl-k:up --cycle --color=fg:blue,fg+:green"

export MPV_WIN_SIZE=1000

export AIO_SERVER="http://10.0.0.2:8888"

py_color="38;2;254;227;107m\033[48;2;52;110;158"
old_color="9"
img_color="38;2;198;141;254"
video_color="38;2;116;194;254"
audio_color="38;2;116;194;254"
win_exe_color="38;2;24;163;0"
document_color="38;2;0;187;255"
pdf_color="38;2;220;0;0"
compressed_color="38;2;255;140;140"
c_color="48;2;0;0;211"
shell_lang_color="48;2;160;168;0"
markup_color="48;2;232;93;0"
js_color="48;2;245;220;29m\033[38;2;0;0;0"
ts_color="48;2;36;131;209m\033[38;2;245;220;29"
font_file_color="38;2;25;245;164"
powerpoint_color="38;2;186;55;24"
spreadsheet_color="38;2;1;110;56"
css_color="48;2;41;165;218"
java_color="48;2;222;96;0m\033[1;38;2;0;205;255"

export LS_COLORS="*.py=${py_color}:*-old=$old_color:*.old=$old_color:*.jpg=$img_color:*.jpeg=$img_color:*.png=$img_color:*.ico=$img_color:*.icon=$img_color:*.webp=$audio_color:*.mp4=$video_color:*.mkv=$video_color:*.m4v=$video_color:*.mov=$video_color:*.gif=$img_color:*.exe=$win_exe_color:*.bat=$shell_lang_color:*.flac=$audio_color:*.mp3=$audio_color:*.m4a=$audio_color:*.ogg=$audio_color:*.opus=$audio_color:*.wav=$audio_color:*.doc=$document_color:*.docx=$document_color:*.odf=$document_color:*.pdf=$pdf_color:*.7z=$compressed_color:*.gz=$compressed_color:*.rar=$compressed_color:*.bz2=$compressed_color:*.cpp=$c_color:*.hpp=$c_color:*.c=$c_color:*.h=$c_color:*.lock=$old_color:*.jar=$compressed_color:*.xf=$compressed_color:*.zsh=$shell_lang_color:*.sh=$shell_lang_color:*.html=$markup_color:*.xml=$markup_color:*.md=$markup_color:*.ps1=$shell_lang_color:*.js=$js_color:*.ts=$ts_color:*.ttf=$font_file_color:*.woff=$font_file_color:*.otf=$font_file_color:*.woff2=$font_file_color:*.htm=$markup_color:*.bash=$shell_lang_color:*.ppt=$powerpoint_color:*.xls=$spreadsheet_color:*.xlsx=$spreadsheet_color:*.ods=$spreadsheet_color:*.webm=$video_color:*.css=$css_color:*.scss=$css_color:*.java=$java_color:*.zip=$compressed_color:*.apikey=$document_color:*.zst=$compressed_color"

unset py_color old_color img_color video_color audio_color win_exe_color document_color pdf_color\
    compressed_color c_color shell_lang_color markup_color js_color font_file_color powerpoint_color spreadsheet_color css_color java_color
# }}}

if ! [ "$TMUX" ]; then
    for file in "${XDG_CONFIG_HOME}/shell-autoload"/*; do
        . "$file"
    done
    . "${XDG_CONFIG_HOME:-$HOME/.config}/.shellprofile"
fi
