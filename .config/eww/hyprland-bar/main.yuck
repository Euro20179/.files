
(deflisten workspace `hyprland-bar/scripts/niri-workspace`)
(defwidget workspaces []
    (literal :content workspace))

(defpoll time :interval "1s"
    :initial "initial-value"
    :run-while true
    `date "+%H:%M Ôê∫"`)
(defpoll date :interval "1m"
    :initial "initial-date"
    `date "+%m/%d üóìÔ∏é"`)

(defpoll volume :interval "2s"
    `pactl get-sink-volume @DEFAULT_SINK@ | cut -d / -f2 | head -n1 | grep -o '[[:digit:]]*'`)
(defpoll mic :interval "2s"
    `pactl get-source-volume @DEFAULT_SOURCE@ | cut -d / -f2 | head -n1 | grep -o '[[:digit:]]*'`)

(defpoll pkg-count :interval "2s"
    `pacman -Q | wc -l`)

(defpoll home-df :interval "5s"
    `duf -json | jq '(.[]|select(.mount_point=="/home").used) / (.[]|select(.mount_point=="/home").total) * 100'`)
(defpoll cloud-df :interval "5s"
    `duf -json | jq '((.[]|select(.mount_point=="/home/cloud")|.used) + (.[]|select(.mount_point=="/home/cloud/COLD-STORAGE")|.used)) / ((.[]|select(.mount_point=="/home/cloud")|.total) + (.[]|select(.mount_point=="/home/cloud/COLD-STORAGE")|.total)) * 100' | head -n1`)
(defpoll backups-df :interval "5s"
    `duf -json | jq '(.[]|select(.mount_point=="/mnt/backups").used) / (.[]|select(.mount_point=="/mnt/backups").total) * 100'`)

(defpoll gpu-ram-used :interval "1s"
    `cat /sys/module/amdgpu/drivers/pci:amdgpu/module/drivers/pci:amdgpu/*:*:00.0/mem_info_vram_used`)
(defpoll gpu-ram-total :interval "1s"
    `cat /sys/module/amdgpu/drivers/pci:amdgpu/module/drivers/pci:amdgpu/*:*:00.0/mem_info_vram_total`)

(defwidget scaler [label temp-source ?class]
    (label :text "${label} ${temp-source}" :class "temp-${round((temp-source - 10) / 10, 0)}")
)

(defpoll cal :interval "1h" "cal")

(defvar volume-amount "ÔÄ¶")
(defpoll volume-muted :interval "1s" "wpctl get-volume @DEFAULT_AUDIO_SINK@ | grep -q MUTED && printf true || printf false")

(defvar vpn-connected "false")

(defwidget INFO []
    (box :orientation "v" :space-evenly false
        (workspaces)
        (box  :orientation "h"
            (label :text "üêè${round(gpu-ram-used / 1024 / 1024 / 1024, 2)}")
        )
        (scaler :label "Ôíº" :temp-source "${round(EWW_TEMPS["K10TEMP_TCTL"], 0)}")
        (scaler :label "Û∞çπ" :temp-source "${round(EWW_TEMPS["AMDGPU_EDGE"], 0)}")
        (scaler :label "ÓøÖ" :temp-source {round(EWW_RAM["used_mem_perc"], 1)})
        (scaler :label "Ó¨Ü" :temp-source "${round(home-df, 1)}")
        (scaler :label "Ó≠ê" :temp-source "${round(cloud-df, 1)}")
        (scaler :label "Û∞ÅØ" :temp-source "${round(backups-df, 1)}")
        (scaler :label volume-amount :class "muted-${volume-muted}" :temp-source volume)
        (scaler :label "Ó¥É" :temp-source mic)


        (box :orientation "v" :space-evenly false
            (label :class "basic-info" :text "${pkg-count} Ó¨©")
            (label :class "basic-info" :text time)
            (label :class "basic-info" :text date)
            (revealer :transition "slideup" :reveal vpn-connected :duration "1s"
                (label  :class "basic-info" :class "vpn-connected-text" :text "VPN C") 
            )
        )
        (systray :orientation "v" :icon-size 22)
    ))

(defwindow hyprland-bar-hdmi
    :monitor 1
    :exclusive true
    :stacking "fg"
    :geometry (geometry
        :width "50px"
        :anchor "left center"
    )
    (INFO)

)

(defwindow hyprland-bar-dp
    :monitor 0
    :exclusive true
    :stacking "fg"
    :geometry (geometry
        :width "50px"
        :anchor "left center"
    )
    (INFO)
)
