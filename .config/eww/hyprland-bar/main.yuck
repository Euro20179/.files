
(deflisten workspace "hyprland-bar/scripts/workspace")
(defwidget workspaces []
    (literal :content workspace))

(defpoll time :interval "1s"
              :initial "initial-value"
              :run-while true
              `date "+%H:%M Ôê∫"`)
(defpoll date :interval "1m"
              :initial "initial-date"
              `date "+%m/%d üóìÔ∏é"`)

(defpoll volume :interval "2s"
         `pactl get-sink-volume @DEFAULT_SINK@ | cut -d / -f2 | head -n1 | grep -o '[[:digit:]]*'`)
(defpoll mic :interval "2s"
         `pactl get-source-volume @DEFAULT_SOURCE@ | cut -d / -f2 | head -n1 | grep -o '[[:digit:]]*'`)

(defpoll pkg-count :interval "2s"
        `pacman -Q | wc -l`)

(defpoll home-df :interval "5s"
        `duf -json | jq '(.[]|select(.mount_point=="/home").used) / (.[]|select(.mount_point=="/home").total) * 100'`)
(defpoll cloud-df :interval "5s"
        `duf -json | jq '((.[]|select(.mount_point=="/home/cloud")|.used) + (.[]|select(.mount_point=="/home/cloud/COLD-STORAGE")|.used)) / ((.[]|select(.mount_point=="/home/cloud")|.total) + (.[]|select(.mount_point=="/home/cloud/COLD-STORAGE")|.total)) * 100'`)
(defpoll backups-df :interval "5s"
        `duf -json | jq '(.[]|select(.mount_point=="/mnt/backups").used) / (.[]|select(.mount_point=="/mnt/backups").total) * 100'`)

(defwidget scaler [label temp-source ?class]
        (box :orientation "v" :space-evenly false :spacing 10 :class class
            (label :text label :class "temp-${round((temp-source - 10) / 10, 0)}")
            (progress :value temp-source :class "temp-${round((temp-source - 10) / 10, 0)}" :orientation "v" :halign "center" :flipped true :tooltip temp-source)
        )
)

(defvar volume-amount "ÔÄ¶")
(defpoll volume-muted :interval "1s" "wpctl get-volume @DEFAULT_AUDIO_SINK@ | grep -q MUTED && printf true || printf false")

(defwidget INFO []
    (box :orientation "v" :space-evenly false
        (workspaces)
        (box
            (scaler :label "Ôíº" :temp-source {EWW_TEMPS["K10TEMP_TCTL"]})
            (scaler :label "Û∞çπ" :temp-source {EWW_TEMPS["AMDGPU_EDGE"]})
            (scaler :label "ÓøÖ" :temp-source {EWW_RAM["used_mem_perc"]})
        )
        (box
            (scaler :label "Ó¨Ü" :temp-source "${round(home-df, 2)}")
            (scaler :label "Ó≠ê" :temp-source "${round(cloud-df, 2)}")
            (scaler :label "Û∞ÅØ" :temp-source "${round(backups-df, 0)}")
        )
        (box
            (scaler :label volume-amount :class "muted-${volume-muted}" :temp-source volume)
            (scaler :label "Ó¥É" :temp-source mic)
        )
        (box :orientation "v"
         (label :class "basic-info" :text "${pkg-count} Ó¨©")
         (label :class "basic-info" :text time)
        (label :class "basic-info" :text date)
        )
    ))

(defwindow hyprland-bar-hdmi
    :monitor 1
    :exclusive true
    :geometry (geometry
        :width "3%"
        :height "1%" ;as small as possible so that only the space necessary is used
        :anchor "left center"
    )
    (INFO)

)

(defwindow hyprland-bar-dp
    :monitor 0
    :exclusive true
    :geometry (geometry
        :width "3%"
        :height "1%" ;as small as possible so that only the space necessary is used
        :anchor "left center"
    )
    (INFO)
)
