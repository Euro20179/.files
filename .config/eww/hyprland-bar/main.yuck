
(deflisten workspace "hyprland-bar/scripts/workspace")
(defwidget workspaces []
    (literal :content workspace))

(defpoll time :interval "1s"
              :initial "initial-value"
              :run-while true
              `date +%H:%M`)

(defpoll volume :interval "2s"
         `pactl get-sink-volume @DEFAULT_SINK@ | cut -d / -f2 | head -n1 | grep -o '[[:digit:]]*'`)
(defpoll mic :interval "2s"
         `pactl get-source-volume @DEFAULT_SOURCE@ | cut -d / -f2 | head -n1 | grep -o '[[:digit:]]*'`)

(defwidget scaler [label temp-source]
        (box :orientation "v" :space-evenly false :spacing 10
            (label :text label :class "temp-${round((temp-source - 10) / 10, 0)}")
            (progress :value temp-source :class "temp-${round((temp-source - 10) / 10, 0)}" :orientation "v" :halign "center" :flipped true :tooltip temp-source)
        )
)

(defwidget INFO []
    (box :orientation "v" :space-evenly false
        (workspaces)
        (box
            (scaler :label "" :temp-source {EWW_TEMPS["K10TEMP_TCTL"]})
            (scaler :label "󰍹" :temp-source {EWW_TEMPS["AMDGPU_EDGE"]})
        )
        (box
            (scaler :label "" :temp-source volume)
            (scaler :label "" :temp-source mic)
        )
         (label :text time)
    ))

(defwindow hyprland-bar-hdmi
    :monitor 1
    :exclusive true
    :geometry (geometry
        :width "2%"
        :height "1%" ;as small as possible so that only the space necessary is used
        :anchor "left center"
    )
    (INFO)

)
(defwindow hyprland-bar-dp
    :monitor 0
    :exclusive true
    :geometry (geometry
        :width "2%"
        :height "1%" ;as small as possible so that only the space necessary is used
        :anchor "left center"
    )
    (INFO)
)
